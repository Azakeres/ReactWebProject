{"ast":null,"code":"var _jsxFileName = \"/Users/azakeres/ArashWebsite/personalwebsite/src/d3/DrawMap.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { geoMercator, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport MapData from \"../IN.json\";\nvar lattop = 51.6;\nvar lonleft = 2.4;\nvar lonright = 7.7;\nvar width = 500;\nvar height = 600; // make the scale so that the difference of longitude is\n// exactly the width of the image\n\nvar scale = 360 * width / (lonright - lonleft);\nconst projection = geoMercator().scale(6600).translate([9900, 5300]);\n\nconst DrawMap = () => {\n  const [geographies, setGeographies] = useState([]);\n  useEffect(() => {\n    setGeographies(feature(MapData, MapData.objects.countries).features);\n  }, []); //   useEffect(() => {\n  //     geographies.map((d, i) => {\n  //       console.log(d);\n  //       console.log(i);\n  //     });\n  //   }, [geographies]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5 text-center\",\n    style: {\n      maxWidth: \"75%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Indiana Counties\"), /*#__PURE__*/React.createElement(\"svg\", {\n    height: height,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"countries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, geographies.map((d, i) => /*#__PURE__*/React.createElement(\"path\", {\n    key: `path-${i}`,\n    d: geoPath().projection(projection)(d),\n    className: \"country\",\n    fill: `rgba(38,50,56,0.9)`,\n    stroke: \"#FFFFFF\",\n    strokeWidth: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default DrawMap;","map":{"version":3,"sources":["/Users/azakeres/ArashWebsite/personalwebsite/src/d3/DrawMap.js"],"names":["React","useState","useEffect","geoMercator","geoPath","feature","MapData","lattop","lonleft","lonright","width","height","scale","projection","translate","DrawMap","geographies","setGeographies","objects","countries","features","maxWidth","map","d","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,QAArC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,IAAIC,MAAM,GAAG,IAAb;AACA,IAAIC,OAAO,GAAG,GAAd;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,GAAb,C,CAEA;AACA;;AACA,IAAIC,KAAK,GAAI,MAAMF,KAAP,IAAiBD,QAAQ,GAAGD,OAA5B,CAAZ;AACA,MAAMK,UAAU,GAAGV,WAAW,GAAGS,KAAd,CAAoB,IAApB,EAA0BE,SAA1B,CAAoC,CAAC,IAAD,EAAO,IAAP,CAApC,CAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,cAAc,CAACZ,OAAO,CAACC,OAAD,EAAUA,OAAO,CAACY,OAAR,CAAgBC,SAA1B,CAAP,CAA4CC,QAA7C,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT,CAHoB,CAOpB;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAA4C,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,IAAA,MAAM,EAAEV,MAAb;AAAqB,IAAA,KAAK,EAAED,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,WAAW,CAACM,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBACf;AACE,IAAA,GAAG,EAAG,QAAOA,CAAE,EADjB;AAEE,IAAA,CAAC,EAAEpB,OAAO,GAAGS,UAAV,CAAqBA,UAArB,EAAiCU,CAAjC,CAFL;AAGE,IAAA,SAAS,EAAC,SAHZ;AAIE,IAAA,IAAI,EAAG,oBAJT;AAKE,IAAA,MAAM,EAAC,SALT;AAME,IAAA,WAAW,EAAE,GANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAFF,CADF;AAmBD,CAjCD;;AAkCA,eAAeR,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { geoMercator, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport MapData from \"../IN.json\";\nvar lattop = 51.6;\nvar lonleft = 2.4;\nvar lonright = 7.7;\nvar width = 500;\nvar height = 600;\n\n// make the scale so that the difference of longitude is\n// exactly the width of the image\nvar scale = (360 * width) / (lonright - lonleft);\nconst projection = geoMercator().scale(6600).translate([9900, 5300]);\n\nconst DrawMap = () => {\n  const [geographies, setGeographies] = useState([]);\n\n  useEffect(() => {\n    setGeographies(feature(MapData, MapData.objects.countries).features);\n  }, []);\n\n  //   useEffect(() => {\n  //     geographies.map((d, i) => {\n  //       console.log(d);\n  //       console.log(i);\n  //     });\n  //   }, [geographies]);\n\n  return (\n    <div className=\"container mt-5 text-center\" style={{ maxWidth: \"75%\" }}>\n      <h1>Indiana Counties</h1>\n      <svg height={height} width={width}>\n        <g className=\"countries\">\n          {geographies.map((d, i) => (\n            <path\n              key={`path-${i}`}\n              d={geoPath().projection(projection)(d)}\n              className=\"country\"\n              fill={`rgba(38,50,56,0.9)`}\n              stroke=\"#FFFFFF\"\n              strokeWidth={0.5}\n            />\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n};\nexport default DrawMap;\n"]},"metadata":{},"sourceType":"module"}