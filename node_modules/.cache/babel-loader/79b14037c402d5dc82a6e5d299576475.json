{"ast":null,"code":"var _jsxFileName = \"/Users/azakeres/ArashWebsite/personalwebsite/src/d3/DrawMap.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport MapData from \"../Census_County_TIGER00_IN.json\";\nconst projection = geoEqualEarth().scale(160).translate([800 / 2, 450 / 2]);\n\nconst DrawMap = () => {\n  const [geographies, setGeographies] = useState([]);\n  useEffect(() => {\n    // MapData.json().then((worlddata) => {\n    //   console.log(worlddata);\n    //   setGeographies(feature(worlddata, worlddata.objects.countries).features);\n    // });\n    setGeographies(feature(MapData, MapData.objects.countries).features);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: 800,\n    height: 450,\n    viewBox: \"0 0 800 450\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"countries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, geographies.map((d, i) => /*#__PURE__*/React.createElement(\"path\", {\n    key: `path-${i}`,\n    d: geoPath().projection(projection)(d),\n    className: \"country\",\n    fill: `rgba(38,50,56,${1 / geographies.length * i})`,\n    stroke: \"#FFFFFF\",\n    strokeWidth: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DrawMap;","map":{"version":3,"sources":["/Users/azakeres/ArashWebsite/personalwebsite/src/d3/DrawMap.js"],"names":["React","useState","useEffect","geoEqualEarth","geoPath","feature","MapData","projection","scale","translate","DrawMap","geographies","setGeographies","objects","countries","features","map","d","i","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,QAAvC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,MAAMC,UAAU,GAAGJ,aAAa,GAC7BK,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAC,MAAM,CAAP,EAAU,MAAM,CAAhB,CAFM,CAAnB;;AAIA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACAU,IAAAA,cAAc,CAACP,OAAO,CAACC,OAAD,EAAUA,OAAO,CAACO,OAAR,CAAgBC,SAA1B,CAAP,CAA4CC,QAA7C,CAAd;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE,GAAZ;AAAiB,IAAA,MAAM,EAAE,GAAzB;AAA8B,IAAA,OAAO,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,CAACK,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBACf;AACE,IAAA,GAAG,EAAG,QAAOA,CAAE,EADjB;AAEE,IAAA,CAAC,EAAEd,OAAO,GAAGG,UAAV,CAAqBA,UAArB,EAAiCU,CAAjC,CAFL;AAGE,IAAA,SAAS,EAAC,SAHZ;AAIE,IAAA,IAAI,EAAG,iBAAiB,IAAIN,WAAW,CAACQ,MAAjB,GAA2BD,CAAE,GAJtD;AAKE,IAAA,MAAM,EAAC,SALT;AAME,IAAA,WAAW,EAAE,GANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AAgBD,CA3BD;;AA4BA,eAAeR,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport MapData from \"../Census_County_TIGER00_IN.json\";\n\nconst projection = geoEqualEarth()\n  .scale(160)\n  .translate([800 / 2, 450 / 2]);\n\nconst DrawMap = () => {\n  const [geographies, setGeographies] = useState([]);\n\n  useEffect(() => {\n    // MapData.json().then((worlddata) => {\n    //   console.log(worlddata);\n    //   setGeographies(feature(worlddata, worlddata.objects.countries).features);\n    // });\n    setGeographies(feature(MapData, MapData.objects.countries).features);\n  }, []);\n\n  return (\n    <svg width={800} height={450} viewBox=\"0 0 800 450\">\n      <g className=\"countries\">\n        {geographies.map((d, i) => (\n          <path\n            key={`path-${i}`}\n            d={geoPath().projection(projection)(d)}\n            className=\"country\"\n            fill={`rgba(38,50,56,${(1 / geographies.length) * i})`}\n            stroke=\"#FFFFFF\"\n            strokeWidth={0.5}\n          />\n        ))}\n      </g>\n    </svg>\n  );\n};\nexport default DrawMap;\n"]},"metadata":{},"sourceType":"module"}